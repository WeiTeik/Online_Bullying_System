"""Add login sessions and persistent 2FA

Revision ID: 6b10d96c5e0d
Revises: add_student_management_fields
Create Date: 2025-10-24 05:37:31.594991

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6b10d96c5e0d'
down_revision = 'add_student_management_fields'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('login_session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token_hash', sa.String(length=128), nullable=False),
    sa.Column('issued_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_seen_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ip_address', sa.String(length=64), nullable=True),
    sa.Column('user_agent', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token_hash')
    )
    op.create_table('two_factor_challenges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('challenge_id', sa.String(length=128), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('code_hash', sa.String(length=128), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('two_factor_challenges', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_two_factor_challenges_challenge_id'), ['challenge_id'], unique=True)

    with op.batch_alter_table('complaint', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=postgresql.ENUM('pending', 'in_progress', 'resolved', 'new', 'rejected', name='complaintstatus'),
               type_=sa.Enum('new', 'in_progress', 'resolved', 'rejected', name='complaintstatus', native_enum=False),
               existing_nullable=False,
               existing_server_default=sa.text("'new'::complaintstatus"))
        batch_op.alter_column('submitted_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))

    with op.batch_alter_table('complaint_comment', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('two_factor_verified_at', sa.DateTime(timezone=True), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('two_factor_verified_at')

    with op.batch_alter_table('complaint_comment', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))

    with op.batch_alter_table('complaint', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('submitted_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('status',
               existing_type=sa.Enum('new', 'in_progress', 'resolved', 'rejected', name='complaintstatus', native_enum=False),
               type_=postgresql.ENUM('pending', 'in_progress', 'resolved', 'new', 'rejected', name='complaintstatus'),
               existing_nullable=False,
               existing_server_default=sa.text("'new'::complaintstatus"))

    with op.batch_alter_table('two_factor_challenges', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_two_factor_challenges_challenge_id'))

    op.drop_table('two_factor_challenges')
    op.drop_table('login_session')
    # ### end Alembic commands ###
